            - name: Deploy Docker to Azure VM
  # You may pin to the exact commit or the version.
  # uses: bitovi/github-actions-docker-to-azure-vm@1db17ab939fd3b875e179040af5f0af489831a49
  uses: bitovi/github-actions-docker-to-azure-vm@v1
  with:
    # Azure client ID
    AZURE_ARM_CLIENT_ID: 
    # Azure client secret
    AZURE_ARM_CLIENT_SECRET: 
    # Azure subscription ID
    AZURE_ARM_SUBSCRIPTION_ID: 
    # Azure tenant ID
    AZURE_ARM_TENANT_ID: 
    # Azure default region
    AZURE_DEFAULT_REGION: # default is eastus
    # Azure storage account name
    AZURE_STORAGE_ACCOUNT: # default is bitops
    # Azure storage account SKU
    AZURE_STORAGE_SKU: # default is Standard_LRS
    # Backend Bucket to use for Terraform state. Defaults to `${org}-${repo}-{branch}-tf-state`
    tf_state_bucket: 
    # Force purge and deletion of bucket on destroy. Any file contained there will be destroyed. `stack_destroy` must also be `true`
    tf_state_bucket_destroy: # optional, default is true
    # Set to override the Azure resource identifier for the deployment.  Defaults to `${org}-{repo}-{branch}`.  Use with destroy to destroy specific resources.
    azure_resource_identifier: 
    # Set to override the Azure VM username for the deployment.  Defaults to `ubuntu`.
    azure_vm_admin_username: # default is ubuntu
    # Set to override the Azure VM password for the deployment.  Defaults to `insecurePasswordABC123@`. Prefer GH Secrets.
    azure_vm_admin_password: # default is insecurePasswordABC123@
    # Set to true to run docker-compose down and docker system prune --all --force --volumes after.
    docker_full_cleanup: # optional
    # Relative path for the directory of the app (i.e. where `Dockerfile` and `docker-compose.yaml` files are located). This is the directory that is copied to the EC2 instance.  Default is the root of the repo. Add a .gha-ignore file with a list of files to be exluded.
    app_directory: # optional
    # Will generate a timestamped compressed file and delete the app repo directory.
    app_directory_cleanup: # optional
    # Port to expose for the app
    app_port: # optional
    # Load balancer listening port. Defaults to 80 if NO FQDN provided, 443 if FQDN provided
    lb_port: # optional
    # Load balancer health check string. Defaults to HTTP:app_port
    lb_healthcheck: # optional
    # Set to "true" to Destroy the stack. Will delete the elb_logs bucket after the destroy action runs.
    stack_destroy: # optional, default is false
    # Define the root domain name for the application. e.g. app.com
    domain_name: # optional
    # Define the sub-domain part of the URL. Defaults to `${org}-${repo}-{branch}`
    sub_domain: # optional
    # Deploy to root domain. Will generate two DNS recrods, one for root, another for www
    root_domain: # optional
    # Define the certificate ARN to use for the application
    cert_arn: # optional
    # Generates and manage the root cert for the application
    create_root_cert: # optional
    # Generates and manage the sub-domain certificate for the application
    create_sub_cert: # optional
    # Makes the application not to use a certificate by disabling certificate lookup.
    no_cert: # optional
    # A list of targets to create before the full stack creation. Example: `
    targets: # optional
    # A JSON object of additional tags that will be included on created resources. Example: `{"key1": "value1", "key2": "value2"}`
    additional_tags: # optional
    # Directory path in application env to mount directory, default is `data`
    application_mount_target: # optional, default is data
    # Directory path within docker env to mount directory to, default is `/data`
    data_mount_target: # optional
    # Set to "true" to enable debug mode
    DEBUG_MODE: # optional, default is false
    # Set to override the BitOps image to use for the deployment.  Defaults to `bitovi/bitops:latest`.
    BITOPS_IMAGE: # optional, default is bitovi/bitops:latest
          
